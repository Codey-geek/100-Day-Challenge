PROBLEM- Sorting a user's choice column in 2D Array

SOLUTION-
package Arrays;

import java.util.*;

public class Sort2DMatrix {
	// Java Code to sort 2D Matrix according to any Column

	// Function to sort by column
	public static void sortbyColumn(int arr[][], int col) {
		// Using built-in sort function Arrays.sort
		Arrays.sort(arr, new Comparator<int[]>() {

			@Override
			// Compare values according to columns
			public int compare(final int[] entry1, final int[] entry2) {

				// To sort in descending order revert the '>' Operator
				if (entry1[col] > entry2[col])
					return 1;
				else
					return -1;
			}
		}); // End of function call sort().
	}

	// Driver Code
	public static void main(String args[]) {
		Scanner s = new Scanner(System.in);
		int i, j;
		System.out.println("Enter the number of array elements: ");
		int rows = s.nextInt();
		int col = s.nextInt();
		int a[][] = new int[rows][col];
		System.out.println("Enter array elements: ");
		for (i = 0; i < rows; i++) {
			for (j = 0; j < col; j++) {
				a[i][j] = s.nextInt();
			}
		}
		// Display the initial Matrix
		System.out.println("Matrix before sorting is ");
		for (i = 0; i < a.length; i++)
		{
			for (j = 0; j < a[i].length; j++)
				System.out.print(a[i][j] + " ");
			System.out.println();
		}
		
			// Sort this matrix by user's choice Column
			System.out.println("Enter the column by which you want to sort the matrix: ");
			int colSort = s.nextInt();
			if (colSort > col)
				System.out.println("Invalid columns for sorting!");
			else
				sortbyColumn(a, colSort - 1);

			// Display the sorted Matrix
			System.out.println("Matrix after sorting column "
					+ colSort+" is ");
			for (i = 0; i < a.length; i++) {
				for (j = 0; j < a[i].length; j++)
					System.out.print(a[i][j] + " ");
				System.out.println();
			}
		}
	}

